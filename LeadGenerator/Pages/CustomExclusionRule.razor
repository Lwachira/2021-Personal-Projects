@page "/customexclusionrule"
@using LeadAutomator.Data

@inject LeadAutomatorService LeadAutoService
@inject Services.AppData AppData
@inject IJSRuntime JsRuntime;
@inject NavigationManager NavigationManager

<div aria-live="polite" aria-atomic="true" style="position: relative;">
    <div class="toast" style="position: absolute; top: 0; right: 0;">
        <div class="toast-header">
            <strong class="mr-auto text-success">Success</strong>
            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                <span aria-hidden="true">×</span>
            </button>
        </div>
        <div class="toast-body">The Exclusion Rule List has cleared.</div>
    </div>
</div>

<h1>Add Custom Exclusion Rules</h1>
<p>Categories selected here will be <b>Excluded</b> from your result set</p>


<EditForm Model="@exclusionRule" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />


    <div class="form-group">
        <label for="exclusionDataTypeSelect">Select Data Type</label>
        <InputSelect @bind-Value="exclusionRule.DataType" id="exclusionDataTypeSelect" class="form-control form-control-lg">
            <option hidden>Please select a data Type</option>
            <option value="Source">Source</option>
            <option value="PeopleSoftID">PeopleSoft ID</option>
            <option value="CustomerName">Customer Name</option>
            <option value="ContactID">Contact ID</option>
            <option value="ContactFlag">Contact Flag</option>
            <option value="Salutation">Salutation</option>
            <option value="ContactName">Contact Name</option>
            <option value="ContactEmail">Contact Email</option>
            <option value="TypeofBusiness">Type of Business</option>
            <option value="CustomerChannel">Customer Channel</option>
            <option value="ContactPhoneNumber">Contact Phone Number</option>
            <option value="ContactPhoneType">Contact Phone Type</option>
        </InputSelect>
    </div>



    <div class="form-group">
        <label for="exclusionConditionSelect">Select Exclusion Condition</label>
        <InputSelect @bind-Value="exclusionRule.Condition" id="exclusionConditionSelect" class="form-control form-control-lg">
            <option hidden>Please select an exclusion field</option>
            <option value="Contains">Contains</option>
            <option value="Equals">Equals</option>
            <option value="IsEmpty">Is Empty</option>
        </InputSelect>
    </div>






    @if (exclusionRule.Condition == "Contains" || exclusionRule.Condition == "Equals")
    {
        <div class="form-group">
            <label for="exclusionValueText">Enter Exclusion Value</label>
            <InputText required @bind-Value="exclusionRule.Value" id="exclusionValueText" class="form-control form-control-lg">

            </InputText>
        </div>
    }
    @*<div class="form-group">
            <div class="custom-control custom-switch custom-switch-lg">
                <InputCheckbox class="custom-control-input" @bind-Value="exclusionRule.isDistinct" id="customSwitch1"></InputCheckbox>
                <label class="custom-control-label" for="customSwitch1">Toggle to bring only distinct value(s) in result set. (Must move to standard rules)</label>
            </div>
        </div>*@



    <div class="row mx-md-n5">
        <div class="col px-md-5">
            <div class="input-group">
                <button type="submit" id="btnSubmitISBN" class="btn btn-dark btn-lg">Add To Exclusion Rule List</button>
            </div>
        </div>


        <div class="col px-md-5">
            <div class="input-group">
                <button type="button" @onclick="ClearExclusionList" id="btnClearISBN" class="btn btn-dark btn-lg">Clear Exclusion Rule List</button>
            </div>
        </div>


        <div class="col-auto px-md-5">
            <div class="input-group">
                @if (AppData.ISBNList != null)
                {
                    <button type="button" @onclick="LoadLeads" id="btnSubmitISBN" class="btn btn-dark btn-lg">Generate List</button>
                }
                else
                {
                    <button type="button" id="btnSubmitISBN" class="btn btn-dark btn-lg" disabled> You need to load ISBN</button>
                }
            </div>
        </div>

    </div>
</EditForm>

@if (rules.Count() > 0)
{
    <div class="table-responsive pt-5">
        <table class="table table-striped">
            <thead>
                <tr>
                    <td>Condition</td>
                    <td>DataType</td>
                    <td>Value</td>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in rules)
                {
                    <tr>
                        <td>@item.Condition</td>
                        <td>@item.DataType</td>
                        <td>@item.Value</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

}
else
{
    <p></p>
}


@code {

    protected ExclusionRule exclusionRule = new ExclusionRule();

    protected List<ExclusionRule> rules = new List<ExclusionRule>();
    protected bool loadSuccess = false;
    protected int excludeCounter = 0;


    private void HandleValidSubmit()
    {
        LeadAutoService.AddCustomExclusion(exclusionRule, rules);
        exclusionRule = new ExclusionRule();

    }


    private void LoadLeads()
    {

        excludeCounter = LeadAutoService.GenerateCustomReport(rules, AppData.Leads);

        if (excludeCounter >= 0)
        {
            NavigationManager.NavigateTo("/leadlist");
        }

    }

    private void ClearExclusionList()
    {
        rules = new List<ExclusionRule>();
        exclusionRule = new ExclusionRule();
        OnInitialized();

        JsRuntime.InvokeAsync<object>("initializeToast");

    }


}
